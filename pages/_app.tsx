import '../styles/globals.css';
import type { AppProps } from 'next/app';
import Head from 'next/head';
import Menu from '../components/menu';
import styled from 'styled-components';
import { useRouter } from 'next/router';
import { auth } from '../firebase';
import { Text } from '../components/text';
import { useEffect, useState } from 'react';
import { AuthProvider } from '../firebase/context';

const Content = styled.div`
  margin: 2rem;
`;

function Loading(): JSX.Element {
  const router = useRouter();

  const [loading, setLoading] = useState<boolean>(false);

  useEffect(() => {
    const handleStart = (url: string) =>
      url !== router.asPath && setLoading(true);
    const handleComplete = (url: string) =>
      url === router.asPath && setLoading(false);

    router.events.on('routeChangeStart', handleStart);
    router.events.on('routeChangeComplete', handleComplete);
    router.events.on('routeChangeError', handleComplete);

    return () => {
      router.events.off('routeChangeStart', handleStart);
      router.events.off('routeChangeComplete', handleComplete);
      router.events.off('routeChangeError', handleComplete);
    };
  });

  return <>{loading && <Text variant="normal">Einen Momment bitte...</Text>}</>;
}

const SUPERUSER = process.env.NEXT_PUBLIC_SUPERUSER1;
const SUPERUSER2 = process.env.NEXT_PUBLIC_SUPERUSER2;
const SUPERUSER3 = process.env.NEXT_PUBLIC_SUPERUSER3;

function MyApp({ Component, pageProps }: AppProps & any) {
  const [superUser, setSuperUser] = useState<boolean>(false);

  const currentuser = auth.currentUser?.emailVerified;

  console.log(currentuser);

  useEffect(() => {
    if (currentuser) {
      auth.currentUser?.email === SUPERUSER && setSuperUser(true);
      auth.currentUser?.email === SUPERUSER2 && setSuperUser(true);
    } else {
      setSuperUser(false);
    }
  }, [currentuser]);

  const menuPoints = [
    { linkName: 'home', href: '/home' },
    { linkName: 'konzerte', href: '/concerts' },
    { linkName: 'personal', href: '/personal' },
  ];

  const loginPoints = [{ linkName: 'login', href: '/authes/login' }];

  const dashboardMenu = [
    { linkName: 'Konzerte', href: '/dashboard/concerts' },
    { linkName: 'Mitarbeiter', href: '/dashboard/workers' },
    { linkName: 'Personalplanung', href: '/dashboard/personal' },
  ];

  const router = useRouter();

  return (
    <>
      <Head>
        <title>Stricker Intern</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {!router.pathname.includes('authes') &&
        !router.pathname.includes('dashboard') && (
          <Menu
            menuPoints={
              router.pathname !== '/' && currentuser ? menuPoints : loginPoints
            }
            user={currentuser}
            superUser={superUser}
          />
        )}
      {router.pathname.includes('dashboard') && (
        <Menu
          menuPoints={dashboardMenu}
          user={currentuser}
          superUser={superUser}
        />
      )}

      <AuthProvider>
        <Content>
          {currentuser || superUser || router.pathname.includes('authes') ? (
            <Component {...pageProps} />
          ) : (
            <Text variant="normal">Du bist nicht angemeldet</Text>
          )}
        </Content>
      </AuthProvider>
    </>
  );
}

export default MyApp;

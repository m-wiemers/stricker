import '../styles/globals.css';
import type { AppProps } from 'next/app';
import Head from 'next/head';
import Menu from '../components/menu';
import styled from 'styled-components';
import { useRouter, Router } from 'next/router';
import { auth } from '../firebase';
import { useEffect, useState } from 'react';
import { AuthProvider } from '../firebase/context';
import Home from '.';
import LoadingScreen from '../components/LoadingScreen';

const Content = styled.div`
  margin: 2rem;
`;

const SUPERUSER = process.env.NEXT_PUBLIC_FIRST_SUPERUSER;
const SECONDSUPERUSER = process.env.NEXT_PUBLIC_SECOND_SUPERUSER;
const THIRDSUPERUSER = process.env.NEXT_PUBLIC_THIRD_SUPERUSER;

function MyApp({ Component, pageProps }: AppProps & any) {
  const router = useRouter();
  const [superUser, setSuperUser] = useState<boolean>(false);
  const [loading, setLoading] = useState(false);
  const currentuser = auth.currentUser?.emailVerified;

  useEffect(() => {
    const start = () => {
      setLoading(true);
    };
    const end = () => {
      setLoading(false);
    };
    Router.events.on('routeChangeStart', start);
    Router.events.on('routeChangeComplete', end);
    Router.events.on('routeChangeError', end);
    return () => {
      Router.events.off('routeChangeStart', start);
      Router.events.off('routeChangeComplete', end);
      Router.events.off('routeChangeError', end);
    };
  }, []);

  useEffect(() => {
    if (currentuser) {
      if (
        auth.currentUser?.email === SUPERUSER ||
        auth.currentUser?.email === SECONDSUPERUSER ||
        auth.currentUser?.email === THIRDSUPERUSER
      ) {
        setSuperUser(true);
      }
    } else {
      setSuperUser(false);
    }
  }, [currentuser]);

  const menuPoints = [
    { linkName: 'home', href: '/home' },
    { linkName: 'konzerte', href: '/concerts' },
    { linkName: 'personal', href: '/personal' },
    { linkName: 'Zeiten', href: `/times?user=${auth.currentUser?.uid}` },
  ];

  const loginPoints = [{ linkName: 'login', href: '/authes/login' }];

  const dashboardMenu = [
    { linkName: 'Home', href: '/home' },
    { linkName: 'Konzerte', href: '/dashboard/concerts' },
    { linkName: 'Mitarbeiter', href: '/dashboard/workers' },
    { linkName: 'Personalplanung', href: '/dashboard/personal' },
  ];

  return (
    <>
      <Head>
        <title>Stricker Intern</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {!router.pathname.includes('authes') &&
        !router.pathname.includes('dashboard') &&
        currentuser && (
          <Menu
            menuPoints={
              router.pathname !== '/' && currentuser ? menuPoints : loginPoints
            }
            user={currentuser}
            superUser={superUser}
          />
        )}
      {router.pathname.includes('dashboard') && superUser && (
        <Menu
          menuPoints={dashboardMenu}
          user={currentuser}
          superUser={superUser}
        />
      )}

      <AuthProvider>
        {loading ? (
          <LoadingScreen />
        ) : (
          <Content>
            {currentuser || superUser || router.pathname.includes('authes') ? (
              <Component {...pageProps} />
            ) : (
              <Home />
            )}
          </Content>
        )}
      </AuthProvider>
    </>
  );
}

export default MyApp;
